include "ADBase.template"


record(mbbo, "$(P)$(R)ImageMode")
{	
	field(ZRST, "Standard")
	field(ZRVL, "0")
	
	field(ONST, "Zero-Deadtime")
	field(ONVL, "1")
	
	field(TWST, "Burst-Mode")
	field(TWVL, "2")
	
	field(THST, "Pileup")
	field(THVL, "3")
	
	field(FRST, "Pileup PPP")
	field(FRVL, "6")
	
	field(VAL, "0")
}

record(mbbi, "$(P)$(R)ImageMode_RBV")
{	
	field(ZRST, "Standard")
	field(ZRVL, "0")
	
	field(ONST, "Zero-Deadtime")
	field(ONVL, "1")
	
	field(TWST, "Burst-Mode")
	field(TWVL, "2")
	
	field(THST, "Pileup")
	field(THVL, "3")
	
	field(FRST, "Pileup PPP")
	field(FRVL, "6")
	
	field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)TriggerMode")
{
	field(PINI, 1)
	
	field(ZRST, "Fixed Time")
	field(ZRVL, "0")
	
	field(ONST, "Continuous with Trigger")
	field(ONVL, "1")
	
	field(TWST, "Start with Trigger")
	field(TWVL, "2")
	
	field(THST, "Gated Trigger")
	field(THVL, "3")
	
	field(FRST, "Trigger Sync")
	field(FRVL, "4")
	
	field(FVST, "Fixed, Start with Trigger")
	field(FVVL, "5")
	
	field(SXST, "Burst Mode")
	field(SXVL, "6")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
	field(ZRST, "Fixed Time")
	field(ZRVL, "0")
	
	field(ONST, "Continuous with Trigger")
	field(ONVL, "1")
	
	field(TWST, "Start with Trigger")
	field(TWVL, "2")
	
	field(THST, "Gated Trigger")
	field(THVL, "3")
	
	field(FRST, "Trigger Sync")
	field(FRVL, "4")
	
	field(FVST, "Fixed, Start with Trigger")
	field(FVVL, "5")
	
	field(SXST, "Burst Mode")
	field(SXVL, "6")
	
	field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)TriggerEdge")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_TRIGGER_EDGE")
	field(ZNAM, "Rising")
	field(ONAM, "Falling")
	field(VAL,  "0")
}

record(bi, "$(P)$(R)TriggerEdge_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_TRIGGER_EDGE")
	field(ZNAM, "Rising")
	field(ONAM, "Falling")
	field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)OutputResolution")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_OUTPUT_RESOLUTION")
	
	field(ZRST, "32 Bit")
	field(ZRVL, "0")
	
	field(ONST, "16 Bit")
	field(ONVL, "1")
	
	field(TWST, "8 Bit")
	field(TWVL, "2")
	
	field(THST, "4 Bit")
	field(THVL, "3")
	
	field(FRST, "3 Bit")
	field(FRVL, "4")
	
	field(FVST, "2 Bit")
	field(FVVL, "5")
	
	field(SXST, "1 Bit")
	field(SXVL, "6")
}

record(mbbi, "$(P)$(R)OutputResolution_RBV")
{
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_OUTPUT_RESOLUTION")

	field(ZRST, "32 Bit")
	field(ZRVL, "0")
	
	field(ONST, "16 Bit")
	field(ONVL, "1")
	
	field(TWST, "8 Bit")
	field(TWVL, "2")
	
	field(THST, "4 Bit")
	field(THVL, "3")
	
	field(FRST, "3 Bit")
	field(FRVL, "4")
	
	field(FVST, "2 Bit")
	field(FVVL, "5")
	
	field(SXST, "1 Bit")
	field(SXVL, "6")
}


record(bo, "$(P)$(R)SparseEnable")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_SPARSE_OUTPUT")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(bo, "$(P)$(R)Corrections")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_CORRECTIONS")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(waveform, "$(P)$(R)FilePath")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RIGAKU_FILE_PATH")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(PINI, "YES")
}

record(waveform, "$(P)$(R)FilePath_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RIGAKU_FILE_PATH")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
	field(PINI, "YES")
}

record(waveform, "$(P)$(R)FileName")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RIGAKU_FILE_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(PINI, "YES")
}

record(waveform, "$(P)$(R)FileName_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RIGAKU_FILE_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
	field(PINI, "YES")
}

record(bo, "$(P)$(R)FlatFieldCorrection")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_FLAT_FIELD")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(bi, "$(P)$(R)FlatFieldCorrection_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_FLAT_FIELD")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)Redistribution")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_REDISTRIBUTION")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(bi, "$(P)$(R)Redistribution_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_REDISTRIBUTION")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)Differentiation")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_DIFFERENTIATION")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(bi, "$(P)$(R)Differentiation_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_DIFFERENTIATION")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)OuterEdge")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_OUTER_EDGE")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(VAL,  "0")
}

record(bi, "$(P)$(R)OuterEdge_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_OUTER_EDGE")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)PixelCorrection")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_PIXEL_CORRECTION")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Use Zero")
	field(ONVL, "1")
	field(TWST, "Use Average")
	field(TWVL, "2")
}

record(mbbi, "$(P)$(R)PixelCorrection_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_PIXEL_CORRECTION")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Use Zero")
	field(ONVL, "1")
	field(TWST, "Use Average")
	field(TWVL, "2")
	field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)CountingRate")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_COUNTING_RATE")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Use Maximum")
	field(ONVL, "1")
	field(TWST, "Use -3")
	field(TWVL, "2")
}

record(mbbi, "$(P)$(R)CountingRate_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_COUNTING_RATE")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Use Maximum")
	field(ONVL, "1")
	field(TWST, "Use -3")
	field(TWVL, "2")
	field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)InterChip")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_INTER_CHIP")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Interpolate")
	field(ONVL, "1")
	field(TWST, "Use Zero")
	field(TWVL, "2")
}

record(mbbi, "$(P)$(R)InterChip_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_INTER_CHIP")
	field(ZRST, "Disabled")
	field(ZRVL, "0")
	field(ONST, "Interpolate")
	field(ONVL, "1")
	field(TWST, "Use Zero")
	field(TWVL, "2")
	field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)NoiseElimination")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_NOISE_ELIMINATION")
	field(ZRST, "Low")
	field(ZRVL, "0")
	field(ONST, "Middle")
	field(ONVL, "1")
	field(TWST, "High")
	field(TWVL, "2")
}

record(mbbi, "$(P)$(R)NoiseElimination_RBV")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_NOISE_ELIMINATION")
	field(ZRST, "Low")
	field(ZRVL, "0")
	field(ONST, "Middle")
	field(ONVL, "1")
	field(TWST, "High")
	field(TWVL, "2")
	field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)DualThreshold")
{
	field(PINI, 1)
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_THRESHOLD_SET")
	field(ZNAM, "Single Threshold")
	field(ONAM, "Dual Threshold")
	field(VAL,  "0")
}

record(ao, "$(P)$(R)UpperThreshold")
{
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_UPPER_THRESHOLD")
	field(PREC, 4)
}

record(ai, "$(P)$(R)UpperThreshold_RBV")
{
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_UPPER_THRESHOLD")
	field(SCAN, "I/O Intr")
	field(PINI, "YES")
	field(PREC, 4)
}

record(ao, "$(P)$(R)LowerThreshold")
{
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_LOWER_THRESHOLD")
	field(PREC, 4)
}

record(ai, "$(P)$(R)LowerThreshold_RBV")
{
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_LOWER_THRESHOLD")
	field(SCAN, "I/O Intr")
	field(PINI, "YES")
	field(PREC, 4)
}

record(ao, "$(P)$(R)AcquireTime")
{
	field(PREC, 6)
}

record(ai, "$(P)$(R)AcquireTime_RBV")
{
	field(PREC, 6)
}

record(ao, "$(P)$(R)AcquireDelay")
{
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_ACQUISITION_DELAY")
	field(PINI, "YES")
	field(PREC, 3)
}

record(ai, "$(P)$(R)AcquireDelay_RBV")
{
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_ACQUISITION_DELAY")
	field(SCAN, "I/O Intr")
	field(PINI, "YES")
	field(PREC, 3)
}


record(stringout, "$(P)$(R)CalibrationLabel")
{
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_CALIBRATION_LABEL")
}

record(stringin, "$(P)$(R)CalibrationLabel_RBV")
{
	field(DTYP, "asynOctetRead")
	field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))RIGAKU_CALIBRATION_LABEL")
	field(PINI, "YES")
	field(SCAN, "I/O Intr")
}

